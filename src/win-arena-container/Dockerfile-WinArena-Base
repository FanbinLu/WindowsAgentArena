# Stage 1: Pull Python from the official Python Docker image
FROM python:3.9-slim AS python-stage

# Stage 2: Start from windows-local base image
FROM windowsarena/windows-local:latest

# Define build argument for profiling mode (default is off)
ARG PROFILE_MODE=false

# Install necessary packages and clean up in one layer to reduce image size
RUN apt-get update && apt-get install -y \
    dos2unix \
    libgl1 \
    libevdev-dev \
    python3-dev \
    build-essential \
    tesseract-ocr \
    && rm -rf /var/lib/apt/lists/*

# Copy Python binaries and libraries from the Python stage
COPY --from=python-stage /usr/local /usr/local

# Ensure scripts are callable
RUN ln -s /usr/local/bin/python /usr/bin/python && \
    ln -s /usr/local/bin/pip /usr/bin/pip

# Copy client application and requirements
COPY src/win-arena-container/client/requirements.txt /client/requirements.txt

# Install Python dependencies from requirements.txt
# Combine all Python package installations into one RUN statement to minimize layering
RUN pip install --no-cache-dir -r /client/requirements.txt && \
    pip install --no-cache-dir requests easyocr tenacity onnxruntime pyOpenSSL sentencepiece anytree

# Conditionally run the disk usage profiling if PROFILE_MODE is true
RUN if [ "$PROFILE_MODE" = "true" ]; then \
        du -ah / | sort -rh | head -n 50 > /du_output.txt; \
    fi